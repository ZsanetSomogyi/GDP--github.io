# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_222mn6YGSEotRDZQG-J3Lq2nrEOLzAv
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Excel fájl beolvasása
df = pd.read_excel('GDP by country.xlsx', index_col=0)

# Az adatokat DataFrame-ként tároljuk, ahol az első oszlop az országok nevei, a többi oszlop pedig az évek GDP-adatai

# Ellenőrizzük az adatokat
print(df.head())

"""Ez által az adatok rendezetebbek és könnyebben kezelhetőek. Ez a kódsor az eredeti táblázatot átalakítja hosszú formátumúvá, ahol minden ország-év pároshoz egy GDP érték tartozik külön sorban."""

df_melted = df.reset_index().melt(id_vars=['Ország'], var_name='Év', value_name='GDP')
print(df_melted.head())

"""Ez a kód biztosítja, hogy az "Év" és a "GDP" oszlopokban csak számok legyenek, a hibás vagy nem szám jellegű értékeket pedig eltávolítja NaN-re cserélve."""

df_melted['Év'] = pd.to_numeric(df_melted['Év'], errors='coerce')
df_melted['GDP'] = pd.to_numeric(df_melted['GDP'], errors='coerce')
print(df_melted.head())

"""A kód kiszűri a 2020-as év GDP-adatait, majd országonkénti bontásban egy színes oszlopdiagramon ábrázolja őket a GDP nagysága szerint."""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
ev = 2020
gdp_ev = df_melted[df_melted['Év'] == ev].dropna()

plt.figure(figsize=(14,8))
sns.barplot(data=gdp_ev, x='GDP', y='Ország', palette='Spectral')
plt.title(f'Összes ország GDP adatai ({ev})')
plt.xlabel('GDP')
plt.ylabel('Ország')
plt.tight_layout()
plt.show()

"""A kód megrajzolja, hogyan változott az összes ország GDP-je évről évre, külön vonallal minden országnak."""

import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(16,10))
sns.lineplot(data=df_melted, x='Év', y='GDP', hue='Ország', palette='tab20', lw=2)
plt.title('Összes ország GDP trendje (idősor)')
plt.xlabel('Év')
plt.ylabel('GDP')
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', ncol=2) # Legenda kívülre
plt.grid(True)
plt.tight_layout()
plt.show()

"""Ez a kódrészlet egy tortadiagramot készít a 2020-as év GDP megoszlásáról. Itt a top 10 ország GDP-jét mutatja, míg a maradék országok egy "Egyéb" kategóriában kerülnek összevonásra."""

ev = 2020
gdp_ev = df_melted[df_melted['Év'] == ev].dropna()

top10 = gdp_ev.sort_values('GDP', ascending=False).head(10)
egyeb = pd.DataFrame({
    'Ország': ['Egyéb'],
    'GDP': [gdp_ev['GDP'].sum() - top10['GDP'].sum()]
})

gdp_plot = pd.concat([top10, egyeb])

plt.figure(figsize=(10,10))
plt.pie(gdp_plot['GDP'], labels=gdp_plot['Ország'], autopct='%1.1f%%', startangle=140, colors=sns.color_palette('pastel'))
plt.title(f'GDP megoszlása ({ev}) — Top 10 + Egyéb')
plt.show()

"""Ez a kódrészlet a 2023-as év GDP eloszlását ábrázolja egy hisztogramon, sűrűségfüggvénnyel (KDE), amely megmutatja, hogy hány ország rendelkezik különböző GDP értékekkel."""

ev = 2023

gdp_ev = df_melted[df_melted['Év'] == ev]['GDP'].dropna()

plt.figure(figsize=(10,6))
sns.histplot(gdp_ev, bins=15, kde=True, color='navy')
plt.title(f'GDP eloszlása minden országra ({ev})')
plt.xlabel('GDP')
plt.ylabel('Országok száma')
plt.tight_layout()
plt.show()

"""Ez a kódrészlet a 2000-es és 2023-as év közötti GDP növekedést ábrázolja országonként, ahol a növekedés a két év közötti különbséget mutatja, és egy oszlopdiagramot készít a legnagyobb növekedést elérő országok rangsorával."""

ev1 = 2000
ev2 = 2023

gdp_2000 = df_melted[df_melted['Év'] == ev1][['Ország', 'GDP']].set_index('Ország')
gdp_2020 = df_melted[df_melted['Év'] == ev2][['Ország', 'GDP']].set_index('Ország')

df_growth = pd.DataFrame({
    ev1: gdp_2000['GDP'],
    ev2: gdp_2020['GDP']
}).dropna()

df_growth['növekedés'] = df_growth[ev2] - df_growth[ev1]
df_growth = df_growth.sort_values('növekedés', ascending=False)

plt.figure(figsize=(14,8))
sns.barplot(x=df_growth['növekedés'], y=df_growth.index, palette='coolwarm')
plt.title(f'Országok GDP növekedése ({ev1}-{ev2})')
plt.xlabel('GDP növekedés')
plt.ylabel('Ország')
plt.tight_layout()
plt.show()

"""Ez a kódrészlet az országok átlagos GDP-jét ábrázolja, és a legnagyobb átlagos GDP-vel rendelkező top 10 országot mutatja egy oszlopdiagramon."""

atlag_gdp = df_melted.groupby('Ország')['GDP'].mean().sort_values(ascending=False).head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=atlag_gdp.values, y=atlag_gdp.index, palette='mako')
plt.title('Top 10 ország átlagos GDP alapján')
plt.xlabel('Átlagos GDP')
plt.ylabel('Ország')
plt.tight_layout()
plt.show()

"""Ez a kódrészlet egy hőtérképet (heatmap) ábrázol, amely megmutatja a GDP változását országok és évek szerint, színskála segítségével, ahol a sötétebb árnyalatok magasabb GDP értékeket jelentenek."""

pivot_table = df_melted.pivot(index='Ország', columns='Év', values='GDP')
plt.figure(figsize=(18, 10))
sns.heatmap(pivot_table, cmap='YlGnBu', linewidths=0.5, linecolor='gray', cbar_kws={'label': 'GDP'})
plt.title('Országok GDP változása évek szerint (hőtérkép)', fontsize=16)
plt.xlabel('Év')
plt.ylabel('Ország')
plt.xticks(rotation=45)
plt.yticks(rotation=0)
plt.tight_layout()
plt.show()

"""Ez a kódrészlet egy buborék diagramot készít, amely a GDP változását mutatja országonként és évenként. A buborékok mérete az egyes országok GDP-jének nagyságát, míg a színük a GDP értéket jelzi, így vizuálisan könnyen összehasonlíthatók az országok gazdasági teljesítményei különböző években."""

plt.figure(figsize=(16, 10))
bubble_size = df_melted['GDP'] / 1000000000
sns.scatterplot(data=df_melted, x='Év', y='Ország', size=bubble_size, hue='GDP', palette='coolwarm', sizes=(20, 200), legend=False)
plt.title('GDP országonként és évenként (Buborék diagram)', fontsize=16)
plt.xlabel('Év')
plt.ylabel('Ország')
plt.legend(title='GDP', loc='upper right')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""A sns.boxplot(data=df_melted, x='Év', y='GDP') kód nem országonként, hanem évenként mutatja a GDP eloszlását.Ez azt jelenti, hogy:
az X-tengelyen az évek szerepelnek (pl. 2000, 2001, ..., 2023),
az Y-tengelyen pedig az összes ország GDP-je az adott évben,
tehát minden évhez tartozik egy doboz, ami az összes ország GDP-értékeinek eloszlását mutatja abban az évben.
"""

plt.figure(figsize=(14,8))
sns.boxplot(data=df_melted, x='Év', y='GDP')
plt.title('GDP eloszlása évek szerint (Boxplot)')
plt.xlabel('Év')
plt.ylabel('GDP')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

plt.figure(figsize=(14,8))
sns.boxplot(data=df_melted, x='Ország', y='GDP')
plt.title('GDP eloszlása országonként (Boxplot)')
plt.xlabel('Ország')
plt.ylabel('GDP')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

plt.figure(figsize=(14,8))
sns.violinplot(data=df_melted, x='Év', y='GDP', inner='quartile')
plt.title('GDP eloszlása évek szerint (Violin plot)')
plt.xlabel('Év')
plt.ylabel('GDP')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""Az országokat a Z-tengelyen különíti el,
az évek mentén látod a változást,
a buborék mérete vagy színe mutathatja a GDP mértékét. Pontdiagramm
"""

import plotly.express as px

fig = px.scatter_3d(
    df_melted,
    x='Év',
    y='GDP',
    z='Ország',
    color='Ország',
    size='GDP',
    title='3D GDP ábra: Év - GDP - Ország',
    opacity=0.7
)

fig.update_layout(scene=dict(
    xaxis_title='Év',
    yaxis_title='GDP',
    zaxis_title='Ország'
))
fig.show()

pivot = df_melted.pivot(index='Ország', columns='Év', values='GDP')
fig = go.Figure(data=[go.Surface(z=pivot.values, x=pivot.columns, y=pivot.index)])
fig.update_layout(
    title='3D GDP Surface Plot',
    scene=dict(
        xaxis_title='Év',
        yaxis_title='Ország',
        zaxis_title='GDP'
    )
)
fig.show()